#include "stm32f4xx.h"

#define DELAY 100  // Gecikme süresi (ms)

// Gecikme fonksiyonu
void delay_ms(uint32_t ms) {
    for (uint32_t i = 0; i < ms * 4000; i++) {
        __NOP(); // Boş döngü (yaklaşık 1 ms)
    }
}

// GPIO'yu başlat
void GPIO_Init(void) {
    // GPIOB için saat etkinleştir (LED'ler)
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;

    // GPIOC için saat etkinleştir (Tuşlar - PC13-PC10)
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;

    // PB0-PB7 pinlerini çıkış moduna ayarla
    GPIOB->MODER &= ~0x0000FFFF; // Mod temizleme
    GPIOB->MODER |= 0x00005555;  // Çıkış moduna ayarla

    // PC10-PC13 pinlerini giriş moduna ayarla (Tuşlar için)
    for (int i = 10; i <= 13; i++) {
        GPIOC->MODER &= ~(3UL << (i * 2)); // Giriş modu
        GPIOC->PUPDR &= ~(3UL << (i * 2)); // Pull-up/pull-down temizle
        GPIOC->PUPDR |= (2UL << (i * 2));  // Pull-down aktif et
    }
}

// LED durumlarını güncelle
void LED_Display(uint8_t pattern) {
    GPIOB->ODR = (GPIOB->ODR & ~0xFF) | (pattern & 0xFF);
}

// Kara şimşek deseni
void LED_KaraSimsek(void) {
    for (int i = 0; i < 4; i++) {
        LED_Display((1 << (3 - i)) | (1 << (4 + i)));
        delay_ms(DELAY);
    }
}

// LED chaser (tek tek ilerleyen ışık)
void LED_Chaser(void) {
    for (int i = 0; i < 8; i++) {
        LED_Display(1 << i);
        delay_ms(DELAY);
    }
}

// Mod 255 (tüm LED'lerin hızlı yanıp sönmesi)
void LED_Mod255(void) {
    for (int i = 0; i < 8; i++) {
        LED_Display(0xFF);
        delay_ms(DELAY);
        LED_Display(0x00);
        delay_ms(DELAY);
    }
}

// Polis çakarı deseni
void LED_PolisCakari(void) {
    for (int i = 0; i < 4; i++) {
        LED_Display(0x0F); // Soldaki LED'ler
        delay_ms(DELAY);
        LED_Display(0xF0); // Sağdaki LED'ler
        delay_ms(DELAY);
    }
}

int main(void) {
    GPIO_Init(); // GPIO yapılandırma

    while (1) {
        if ((GPIOC->IDR & (1 << 13)) == 0) { // K tuşu (PC13)
            delay_ms(50); // Debouncing için
            if ((GPIOC->IDR & (1 << 13)) == 0) {
                LED_KaraSimsek();
            }
        }

        if ((GPIOC->IDR & (1 << 12)) == 0) { // L tuşu (PC12)
            delay_ms(50);
            if ((GPIOC->IDR & (1 << 12)) == 0) {
                LED_Chaser();
            }
        }

        if ((GPIOC->IDR & (1 << 11)) == 0) { // M tuşu (PC11)
            delay_ms(50);
            if ((GPIOC->IDR & (1 << 11)) == 0) {
                LED_Mod255();
            }
        }

        if ((GPIOC->IDR & (1 << 10)) == 0) { // P tuşu (PC10)
            delay_ms(50);
            if ((GPIOC->IDR & (1 << 10)) == 0) {
                LED_PolisCakari();
            }
        }
    }
}
