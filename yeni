#include "stm32f4xx.h"

// Pin Tan覺mlar覺
#define LED_PORT GPIOA
#define LED_PIN GPIO_Pin_5
#define BUTTON_PORT GPIOB
#define BUTTON_L GPIO_Pin_0
#define BUTTON_M GPIO_Pin_1
#define BUTTON_P GPIO_Pin_2
#define BUTTON_K GPIO_Pin_3

void delay(volatile uint32_t s) {
    for(; s>0; s--);
}

void initLED() {
    // LED Port Ayarlar覺
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
    GPIO_InitTypeDef GPIO_InitStructure;
    GPIO_InitStructure.GPIO_Pin = LED_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
    GPIO_Init(LED_PORT, &GPIO_InitStructure);

    // Buton Port Ayarlar覺
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
    GPIO_InitStructure.GPIO_Pin = BUTTON_L | BUTTON_M | BUTTON_P | BUTTON_K;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
    GPIO_Init(BUTTON_PORT, &GPIO_InitStructure);
}

void kara_simsek() {
    for(int j = 0; j < 3; j++) {
        for(int i = 0; i < 6; i++) {
            GPIO_WriteBit(LED_PORT, LED_PIN, Bit_SET);
            delay(50000);
            GPIO_WriteBit(LED_PORT, LED_PIN, Bit_RESET);
            delay(50000);
        }
    }
}

void led_chaser() {
    for(int j = 0; j < 5; j++) {
        GPIO_ToggleBit(LED_PORT, LED_PIN);
        delay(50000);
    }
}

void mod255() {
    for(uint8_t i = 0; i < 255; i++) {
        GPIO_Write(LED_PORT, i);
        delay(10000);
    }
}

void polis_cakari() {
    for(int j = 0; j < 10; j++) {
        GPIO_SetBits(LED_PORT, LED_PIN);
        delay(30000);
        GPIO_ResetBits(LED_PORT, LED_PIN);
        delay(30000);
    }
}

int main(void) {
    SystemInit();
    initLED();
    
    while(1) {
        if(GPIO_ReadInputDataBit(BUTTON_PORT, BUTTON_K) == Bit_RESET) {
            kara_simsek();
        }
        else if(GPIO_ReadInputDataBit(BUTTON_PORT, BUTTON_L) == Bit_RESET) {
            led_chaser();
        }
        else if(GPIO_ReadInputDataBit(BUTTON_PORT, BUTTON_M) == Bit_RESET) {
            mod255();
        }
        else if(GPIO_ReadInputDataBit(BUTTON_PORT, BUTTON_P) == Bit_RESET) {
            polis_cakari();
        }
        
        delay(50000);
    }
}
